Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    lfsr113.o(i.lfsr113) refers to lfsr113.o(.data) for z1
    random.o(i.next_event) refers to lfsr113.o(i.lfsr113) for lfsr113
    random.o(i.next_event) refers to random.o(.data) for ln_table
    retarget.o(i._ttywrch) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.fgetc) refers to retarget.o(i.getkey) for getkey
    retarget.o(i.fgetc) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.fputc) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.getkey) refers to uart.o(i.UARTInit) for UARTInit
    retarget.o(i.getkey) refers to uart.o(i.UARTReceiveChar) for UARTReceiveChar
    retarget.o(i.getkey) refers to retarget.o(.data) for uart_init_called
    retarget.o(i.sendchar) refers to uart.o(i.UARTInit) for UARTInit
    retarget.o(i.sendchar) refers to uart.o(i.UARTSendChar) for UARTSendChar
    retarget.o(i.sendchar) refers to retarget.o(.data) for uart_init_called
    uart.o(i.FreeRcv) refers to uart.o(i.Free) for Free
    uart.o(i.FreeRcv) refers to uart.o(.data) for RcvLock0
    uart.o(i.FreeSnd) refers to uart.o(i.Free) for Free
    uart.o(i.FreeSnd) refers to uart.o(.data) for SndLock0
    uart.o(i.LockRcv) refers to uart.o(i.Lock) for Lock
    uart.o(i.LockRcv) refers to uart.o(.data) for RcvLock0
    uart.o(i.LockSnd) refers to uart.o(i.Lock) for Lock
    uart.o(i.LockSnd) refers to uart.o(.data) for SndLock0
    uart.o(i.UART0_IRQHandler) refers to uart.o(.bss) for UART0Buffer
    uart.o(i.UART0_IRQHandler) refers to uart.o(.data) for UART0Count
    uart.o(i.UART1_IRQHandler) refers to uart.o(.bss) for UART1Buffer
    uart.o(i.UART1_IRQHandler) refers to uart.o(.data) for UART1Count
    uart.o(i.UARTInit) refers to uart.o(i.getFrequency) for getFrequency
    uart.o(i.UARTInit) refers to uart.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    uart.o(i.UARTInit) refers to uart.o(i.FreeRcv) for FreeRcv
    uart.o(i.UARTInit) refers to uart.o(i.FreeSnd) for FreeSnd
    uart.o(i.UARTRecieve) refers to uart.o(i.LockRcv) for LockRcv
    uart.o(i.UARTRecieve) refers to uart.o(i.FreeRcv) for FreeRcv
    uart.o(i.UARTRecieve) refers to uart.o(.data) for UART0Count
    uart.o(i.UARTRecieve) refers to uart.o(.bss) for UART0Buffer
    uart.o(i.UARTSend) refers to uart.o(i.LockSnd) for LockSnd
    uart.o(i.UARTSend) refers to uart.o(i.FreeSnd) for FreeSnd
    uart.o(i.UARTSend) refers to uart.o(.data) for UART0TxEmpty
    uart.o(i.getFrequency) refers to system_lpc17xx.o(.data) for SystemCoreClock
    main.o(i.client) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for osKernelGetSysTimerCount
    main.o(i.client) refers to dflt_clz.o(x$fpl$dfltu) for __aeabi_ui2d
    main.o(i.client) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    main.o(i.client) refers to d2f.o(x$fpl$d2f) for __aeabi_d2f
    main.o(i.client) refers to random.o(i.next_event) for next_event
    main.o(i.client) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for osKernelGetTickFreq
    main.o(i.client) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.client) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(i.client) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    main.o(i.client) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    main.o(i.client) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    main.o(i.client) refers to main.o(.data) for timeElapsed
    main.o(i.main) refers to system_lpc17xx.o(i.SystemInit) for SystemInit
    main.o(i.main) refers to system_lpc17xx.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(i.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(i.main) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(i.main) refers to main.o(i.output) for output
    main.o(i.main) refers to main.o(.data) for serverNum
    main.o(i.main) refers to main.o(i.server) for server
    main.o(i.main) refers to main.o(i.client) for client
    main.o(i.output) refers to _printf_pad.o(.text) for _printf_pre_padding
    main.o(i.output) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(i.output) refers to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(i.output) refers to _printf_str.o(.text) for _printf_str
    main.o(i.output) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(i.output) refers to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    main.o(i.output) refers to _printf_dec.o(.text) for _printf_int_dec
    main.o(i.output) refers to printf1.o(x$fpl$printf1) for _printf_fp_dec
    main.o(i.output) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for osKernelGetTickFreq
    main.o(i.output) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.output) refers to noretval__2printf.o(.text) for __2printf
    main.o(i.output) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for osKernelGetSysTimerCount
    main.o(i.output) refers to dflt_clz.o(x$fpl$dfltu) for __aeabi_ui2d
    main.o(i.output) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    main.o(i.output) refers to d2f.o(x$fpl$d2f) for __aeabi_d2f
    main.o(i.output) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    main.o(i.output) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    main.o(i.output) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    main.o(i.output) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    main.o(i.output) refers to f2d.o(x$fpl$f2d) for __aeabi_f2d
    main.o(i.output) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for osMessageQueueGetCount
    main.o(i.output) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    main.o(i.output) refers to main.o(.data) for timeElapsed
    main.o(i.output) refers to main.o(.conststring) for .conststring
    main.o(i.server) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for osKernelGetSysTimerCount
    main.o(i.server) refers to dflt_clz.o(x$fpl$dfltu) for __aeabi_ui2d
    main.o(i.server) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    main.o(i.server) refers to d2f.o(x$fpl$d2f) for __aeabi_d2f
    main.o(i.server) refers to random.o(i.next_event) for next_event
    main.o(i.server) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for osKernelGetTickFreq
    main.o(i.server) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.server) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    main.o(i.server) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    main.o(i.server) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    main.o(i.server) refers to main.o(.data) for timeElapsed
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_lib.o(.data) for os_kernel_active
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    startup_lpc17xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc17xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc17xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc17xx.o(RESET) refers to startup_lpc17xx.o(STACK) for __initial_sp
    startup_lpc17xx.o(RESET) refers to startup_lpc17xx.o(.text) for Reset_Handler
    startup_lpc17xx.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_lpc17xx.o(RESET) refers to uart.o(i.UART0_IRQHandler) for UART0_IRQHandler
    startup_lpc17xx.o(RESET) refers to uart.o(i.UART1_IRQHandler) for UART1_IRQHandler
    startup_lpc17xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc17xx.o(.text) refers to system_lpc17xx.o(i.SystemInit) for SystemInit
    startup_lpc17xx.o(.text) refers to __main.o(!!!main) for __main
    startup_lpc17xx.o(.text) refers to startup_lpc17xx.o(HEAP) for Heap_Mem
    startup_lpc17xx.o(.text) refers to startup_lpc17xx.o(STACK) for Stack_Mem
    system_lpc17xx.o(i.SystemCoreClockUpdate) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    system_lpc17xx.o(i.SystemCoreClockUpdate) refers to system_lpc17xx.o(.data) for SystemCoreClock
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm3.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRoot) for osRtxThreadListRoot
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm3.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_lpc17xx.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_lpc17xx.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    __2printf.o(.text) refers to _printf_char_file.o(.text) for _printf_char_file
    __2printf.o(.text) refers to retarget.o(.data) for __stdout
    noretval__2printf.o(.text) refers to _printf_char_file.o(.text) for _printf_char_file
    noretval__2printf.o(.text) refers to retarget.o(.data) for __stdout
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_str.o(.text) refers (Special) to _printf_char.o(.text) for _printf_cs_common
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) refers (Weak) to _printf_char.o(.text) for _printf_string
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    d2f.o(x$fpl$d2f) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    d2f.o(x$fpl$d2f) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    d2f.o(x$fpl$d2f) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    ddiv.o(x$fpl$drdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$drdiv) refers to ddiv.o(x$fpl$ddiv) for ddiv_entry
    ddiv.o(x$fpl$ddiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$ddiv) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    ddiv.o(x$fpl$ddiv) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dflt_clz.o(x$fpl$dfltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dfltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    f2d.o(x$fpl$f2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    f2d.o(x$fpl$f2d) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    f2d.o(x$fpl$f2d) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    faddsub_clz.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$fadd) refers to faddsub_clz.o(x$fpl$fsub) for _fsub1
    faddsub_clz.o(x$fpl$fadd) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    faddsub_clz.o(x$fpl$fadd) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    faddsub_clz.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$frsb) refers to faddsub_clz.o(x$fpl$fadd) for _fadd1
    faddsub_clz.o(x$fpl$frsb) refers to faddsub_clz.o(x$fpl$fsub) for _fsub1
    faddsub_clz.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$fsub) refers to faddsub_clz.o(x$fpl$fadd) for _fadd1
    faddsub_clz.o(x$fpl$fsub) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fdiv.o(x$fpl$frdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(x$fpl$frdiv) refers to fdiv.o(x$fpl$fdiv) for _fdiv1
    fdiv.o(x$fpl$fdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(x$fpl$fdiv) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    fdiv.o(x$fpl$fdiv) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fflt_clz.o(x$fpl$ffltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$fflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$ffltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    fmul.o(x$fpl$fmul) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    printf1.o(x$fpl$printf1) refers to _printf_fp_dec.o(.text) for _printf_fp_dec_real
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_dec.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec.o(.text) refers to bigflt0.o(.text) for _btod_etento
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_d2e) for _btod_d2e
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_ediv) for _btod_ediv
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_emul) for _btod_emul
    _printf_fp_dec.o(.text) refers to lludiv10.o(.text) for _ll_udiv10
    _printf_fp_dec.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_char.o(.text) refers (Weak) to _printf_str.o(.text) for _printf_str
    _printf_char_file.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    _printf_char_file.o(.text) refers to retarget.o(i.ferror) for ferror
    _printf_char_file.o(.text) refers to retarget.o(i.fputc) for fputc
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fretinf.o(x$fpl$fretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    rt_locale.o(.text) refers to rt_locale.o(.bss) for __rt_locale_data
    rt_locale_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_locale_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    _printf_char_common.o(.text) refers to __printf_wp.o(.text) for __printf
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    bigflt0.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    bigflt0.o(.text) refers to btod.o(CL$$btod_emul) for _btod_emul
    bigflt0.o(.text) refers to btod.o(CL$$btod_ediv) for _btod_ediv
    bigflt0.o(.text) refers to bigflt0.o(.constdata) for .constdata
    bigflt0.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e) refers to btod.o(CL$$btod_d2e_norm_op1) for _d2e_norm_op1
    btod.o(CL$$btod_d2e_norm_op1) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e_norm_op1) refers to btod.o(CL$$btod_d2e_denorm_low) for _d2e_denorm_low
    btod.o(CL$$btod_d2e_denorm_low) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emul) refers to btod.o(CL$$btod_mult_common) for __btod_mult_common
    btod.o(CL$$btod_emul) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_ediv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_ediv) refers to btod.o(CL$$btod_div_common) for __btod_div_common
    btod.o(CL$$btod_ediv) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_emuld) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emuld) refers to btod.o(CL$$btod_mult_common) for __btod_mult_common
    btod.o(CL$$btod_emuld) refers to btod.o(CL$$btod_e2d) for _e2d
    btod.o(CL$$btod_edivd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_edivd) refers to btod.o(CL$$btod_div_common) for __btod_div_common
    btod.o(CL$$btod_edivd) refers to btod.o(CL$$btod_e2d) for _e2d
    btod.o(CL$$btod_e2e) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_e2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_e2d) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_mult_common) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_div_common) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    lc_numeric_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000016) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000016) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers to strcmpv7m.o(.text) for strcmp
    lc_numeric_c.o(locale$$code) refers to lc_numeric_c.o(locale$$data) for __lcnum_c_name
    istatus.o(x$fpl$ieeestatus) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_lpc17xx.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libinit2.o(.ARM.Collect$$libinit$$0000000F) refers (Weak) to rt_locale_twolibspace.o(.text) for __rt_locale
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers (Weak) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to retarget.o(i._sys_exit) for _sys_exit
    defsig_exit.o(.text) refers to retarget.o(i._sys_exit) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to retarget.o(i._sys_exit) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to retarget.o(i._ttywrch) for _ttywrch
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing retarget.o(i._ttywrch), (12 bytes).
    Removing retarget.o(i.fgetc), (20 bytes).
    Removing retarget.o(i.getkey), (36 bytes).
    Removing uart.o(.rev16_text), (4 bytes).
    Removing uart.o(.revsh_text), (4 bytes).
    Removing uart.o(.rrx_text), (6 bytes).
    Removing uart.o(i.Lock), (28 bytes).
    Removing uart.o(i.LockRcv), (36 bytes).
    Removing uart.o(i.LockSnd), (36 bytes).
    Removing uart.o(i.UARTReceiveChar), (36 bytes).
    Removing uart.o(i.UARTRecieve), (160 bytes).
    Removing uart.o(i.UARTSend), (132 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing main.o(.constdata), (16 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(i.__user_perthread_libspace), (88 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (496 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing system_lpc17xx.o(.rev16_text), (4 bytes).
    Removing system_lpc17xx.o(.revsh_text), (4 bytes).
    Removing system_lpc17xx.o(.rrx_text), (6 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (80 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (140 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (188 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (102 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (32 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (168 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (120 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (328 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (92 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (44 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).

327 unused section(s) (total 7900 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/dczerorl2.s                0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/bigflt.c                         0x00000000   Number         0  bigflt0.o ABSOLUTE
    ../clib/btod.s                           0x00000000   Number         0  btod.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_numeric_c.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludiv10.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_pad.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_str.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_file.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_infnan.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_s.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_f.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/d2f.s                           0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/ddiv.s                          0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/dflt.s                          0x00000000   Number         0  dflt_clz.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/f2d.s                           0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/faddsub.s                       0x00000000   Number         0  faddsub_clz.o ABSOLUTE
    ../fplib/fdiv.s                          0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/fflt.s                          0x00000000   Number         0  fflt_clz.o ABSOLUTE
    ../fplib/fmul.s                          0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/fnaninf.s                       0x00000000   Number         0  fnaninf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fretinf.s                       0x00000000   Number         0  fretinf.o ABSOLUTE
    ../fplib/istatus.s                       0x00000000   Number         0  istatus.o ABSOLUTE
    ../fplib/printf1.s                       0x00000000   Number         0  printf1.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/fpclassify.c                  0x00000000   Number         0  fpclassify.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm3.s            0x00000000   Number         0  irq_cm3.o ABSOLUTE
    C:\Users\User\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Users\\User\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.7.0\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\LPC1768\startup_LPC17xx.s     0x00000000   Number         0  startup_lpc17xx.o ABSOLUTE
    RTE\Device\LPC1768\system_LPC17xx.c      0x00000000   Number         0  system_lpc17xx.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\LPC1768\\system_LPC17xx.c   0x00000000   Number         0  system_lpc17xx.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    src\Retarget.c                           0x00000000   Number         0  retarget.o ABSOLUTE
    src\\uart.c                              0x00000000   Number         0  uart.o ABSOLUTE
    src\lfsr113.c                            0x00000000   Number         0  lfsr113.o ABSOLUTE
    src\random.c                             0x00000000   Number         0  random.o ABSOLUTE
    src\uart.c                               0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x10000000   Section      204  startup_lpc17xx.o(RESET)
    !!!main                                  0x100000cc   Section        8  __main.o(!!!main)
    !!!scatter                               0x100000d4   Section       52  __scatter.o(!!!scatter)
    !!dczerorl2                              0x10000108   Section       90  __dczerorl2.o(!!dczerorl2)
    !!handler_zi                             0x10000164   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x10000180   Section        0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000003  0x10000180   Section        6  _printf_f.o(.ARM.Collect$$_printf_percent$$00000003)
    .ARM.Collect$$_printf_percent$$00000009  0x10000186   Section        6  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$00000014  0x1000018c   Section        6  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    .ARM.Collect$$_printf_percent$$00000017  0x10000192   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x10000196   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x10000198   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x10000198   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x10000198   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x10000198   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x10000198   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$0000000F          0x10000198   Section        6  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    .ARM.Collect$$libinit$$00000011          0x1000019e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x1000019e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x1000019e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000016          0x1000019e   Section       10  libinit2.o(.ARM.Collect$$libinit$$00000016)
    .ARM.Collect$$libinit$$00000017          0x100001a8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x100001a8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x100001a8   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x100001a8   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x100001a8   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x100001a8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x100001a8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x100001a8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x100001a8   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x100001a8   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x100001a8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x100001a8   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x100001a8   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x100001aa   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x100001ac   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x100001ac   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x100001ac   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x100001ac   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x100001ac   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x100001ac   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x100001ac   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x100001ae   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x100001ae   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x100001ae   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x100001b4   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x100001bc   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x100001c0   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x100001c0   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x100001c8   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x100001ca   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x100001ca   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x100001ce   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x100001d4   Section       64  startup_lpc17xx.o(.text)
    .text                                    0x10000214   Section      148  irq_cm3.o(.text)
    .text                                    0x100002a8   Section      238  lludivv7m.o(.text)
    .text                                    0x10000398   Section        0  noretval__2printf.o(.text)
    .text                                    0x100003b0   Section        0  _printf_pad.o(.text)
    .text                                    0x100003fe   Section        0  _printf_str.o(.text)
    .text                                    0x10000450   Section        0  _printf_dec.o(.text)
    .text                                    0x100004c8   Section        0  __printf_wp.o(.text)
    .text                                    0x100005d6   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x10000660   Section       68  rt_memclr.o(.text)
    .text                                    0x100006a4   Section       78  rt_memclr_w.o(.text)
    .text                                    0x100006f2   Section        0  heapauxi.o(.text)
    .text                                    0x100006f8   Section        0  _printf_intcommon.o(.text)
    .text                                    0x100007aa   Section        0  _printf_fp_dec.o(.text)
    _fp_digits                               0x100007ad   Thumb Code   432  _printf_fp_dec.o(.text)
    .text                                    0x10000bc8   Section        0  _printf_char.o(.text)
    .text                                    0x10000bf4   Section        0  _printf_char_file.o(.text)
    .text                                    0x10000c18   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x10000c7c   Section       10  rt_locale_twolibspace.o(.text)
    .text                                    0x10000c86   Section      138  lludiv10.o(.text)
    .text                                    0x10000d10   Section        0  _printf_char_common.o(.text)
    _printf_input_char                       0x10000d11   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x10000d40   Section        0  _printf_fp_infnan.o(.text)
    .text                                    0x10000dc0   Section        0  bigflt0.o(.text)
    .text                                    0x10000ea4   Section        8  libspace.o(.text)
    .text                                    0x10000eac   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x10000ef6   Section        0  exit.o(.text)
    .text                                    0x10000f08   Section      128  strcmpv7m.o(.text)
    [Anonymous Symbol]                       0x10000f88   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueueGet                          0x10000f89   Thumb Code    64  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x10000fc8   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueuePut                          0x10000fc9   Thumb Code    88  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x10001020   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    MessageQueueRemove                       0x10001021   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x1000103c   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x10001044   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x10001048   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x10001068   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x1000106c   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x10001070   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x10001074   Section        0  os_systick.o(.text.OS_Tick_GetCount)
    __arm_cp.7_0                             0x10001080   Number         4  os_systick.o(.text.OS_Tick_GetCount)
    [Anonymous Symbol]                       0x10001084   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x1000108c   Section        0  os_systick.o(.text.OS_Tick_GetInterval)
    __arm_cp.6_0                             0x10001094   Number         4  os_systick.o(.text.OS_Tick_GetInterval)
    [Anonymous Symbol]                       0x10001098   Section        0  os_systick.o(.text.OS_Tick_GetOverflow)
    __arm_cp.8_0                             0x100010a4   Number         4  os_systick.o(.text.OS_Tick_GetOverflow)
    [Anonymous Symbol]                       0x100010a8   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x100010d8   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x100010dc   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x100010e0   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x100010e4   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x100010e8   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x100010e9   Thumb Code   110  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x10001158   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerInsert                              0x10001159   Thumb Code    72  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x1000119c   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x100011a0   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x100011c0   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x100011c4   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_0                             0x100011ec   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_1                             0x100011f0   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x100011f4   Section        0  rtx_kernel.o(.text.osKernelGetSysTimerCount)
    __arm_cp.16_0                            0x10001214   Number         4  rtx_kernel.o(.text.osKernelGetSysTimerCount)
    [Anonymous Symbol]                       0x10001218   Section        0  rtx_kernel.o(.text.osKernelGetTickFreq)
    __arm_cp.14_0                            0x10001238   Number         4  rtx_kernel.o(.text.osKernelGetTickFreq)
    __arm_cp.14_1                            0x1000123c   Number         4  rtx_kernel.o(.text.osKernelGetTickFreq)
    [Anonymous Symbol]                       0x10001240   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.1_0                             0x10001268   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x1000126c   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.6_0                             0x1000128c   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x10001290   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x100012f8   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x100012fc   Section        0  rtx_msgqueue.o(.text.osMessageQueueGetCount)
    __arm_cp.8_0                             0x10001328   Number         4  rtx_msgqueue.o(.text.osMessageQueueGetCount)
    [Anonymous Symbol]                       0x1000132c   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x1000134c   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x10001350   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x100013c4   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x100013c8   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.4_0                             0x100013e8   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x100013ec   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.7_0                             0x1000140c   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x10001410   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x10001430   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x10001434   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.5_0                             0x10001454   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x10001458   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x1000145a   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x100014ca   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x10001510   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x1000154c   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x10001586   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x100015d0   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x10001606   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMessageQueuePostProcess             0x10001607   Thumb Code   186  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x100016c0   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x10001708   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x1000174c   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x100017d4   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x100017d8   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x10001844   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x10001848   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x1000184c   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x1000184d   Thumb Code    56  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.11_0                            0x10001880   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x10001884   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x10001885   Thumb Code   116  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.15_0                            0x100018f4   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x100018f8   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x100018f9   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.13_0                            0x10001930   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x10001934   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x1000197c   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x10001980   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.10_0                            0x100019d4   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x100019d8   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x100019d9   Thumb Code    88  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.53_0                            0x10001a2c   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x10001a30   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x10001a42   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x10001a6e   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x10001a82   Section        0  rtx_thread.o(.text.osRtxThreadListRoot)
    osRtxThreadListRoot                      0x10001a83   Thumb Code    12  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x10001a8e   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x10001ab4   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x10001ab5   Thumb Code    40  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x10001adc   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x10001aec   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x10001af0   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x10001af8   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.9_0                             0x10001b18   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.9_1                             0x10001b1c   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x10001b20   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.16_0                            0x10001b50   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.16_1                            0x10001b54   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.16_2                            0x10001b58   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.16_3                            0x10001b5c   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x10001b60   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.8_0                             0x10001b6c   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x10001b70   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.14_0                            0x10001ba4   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x10001ba8   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x10001bcc   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x10001c38   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x10001c3c   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_0                             0x10001c6c   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_1                             0x10001c70   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x10001c74   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x10001c78   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osRtxTimerTick                           0x10001c79   Thumb Code    84  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x10001cc8   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x10001ccc   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.32_0                            0x10001cd4   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x10001cd8   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.18_0                            0x10001cf8   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x10001cfc   Section        0  rtx_thread.o(.text.osThreadYield)
    __arm_cp.27_0                            0x10001d1c   Number         4  rtx_thread.o(.text.osThreadYield)
    [Anonymous Symbol]                       0x10001d20   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxDelay                              0x10001d21   Thumb Code    20  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x10001d34   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetState                     0x10001d35   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.5_0                             0x10001d3c   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x10001d40   Section        0  rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount)
    svcRtxKernelGetSysTimerCount             0x10001d41   Thumb Code    40  rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount)
    __arm_cp.17_0                            0x10001d64   Number         4  rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount)
    [Anonymous Symbol]                       0x10001d68   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickFreq)
    svcRtxKernelGetTickFreq                  0x10001d69   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetTickFreq)
    __arm_cp.15_0                            0x10001d70   Number         4  rtx_kernel.o(.text.svcRtxKernelGetTickFreq)
    [Anonymous Symbol]                       0x10001d74   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x10001d75   Thumb Code   336  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_0                            0x10001eb8   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_1                            0x10001ebc   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_2                            0x10001ec0   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x10001ec4   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x10001ec5   Thumb Code   136  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_0                            0x10001f3c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_1                            0x10001f40   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_2                            0x10001f44   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_3                            0x10001f48   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x10001f4c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGet                    0x10001f4d   Thumb Code   224  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x10002028   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x1000202c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount)
    svcRtxMessageQueueGetCount               0x1000202d   Thumb Code    16  rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount)
    [Anonymous Symbol]                       0x1000203c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueueNew                    0x1000203d   Thumb Code   304  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_0                            0x10002164   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x10002168   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x1000216c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x1000216d   Thumb Code   192  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.19_0                            0x10002228   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x1000222c   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexAcquire                       0x1000222d   Thumb Code   148  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.10_0                            0x100022bc   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x100022c0   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexDelete                        0x100022c1   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.13_0                            0x1000236c   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x10002370   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexNew                           0x10002371   Thumb Code   104  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.8_0                             0x100023d4   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x100023d8   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxMutexRelease                       0x100023d9   Thumb Code   180  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x10002488   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x1000248c   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x1000248d   Thumb Code   104  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.55_0                            0x100024f0   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x100024f4   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x100024f5   Thumb Code   464  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_0                            0x100026b0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_1                            0x100026b4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_2                            0x100026b8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_3                            0x100026bc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.17_4                            0x100026c0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x100026c4   Section        0  rtx_thread.o(.text.svcRtxThreadYield)
    svcRtxThreadYield                        0x100026c5   Thumb Code    56  rtx_thread.o(.text.svcRtxThreadYield)
    __arm_cp.48_0                            0x100026f8   Number         4  rtx_thread.o(.text.svcRtxThreadYield)
    CL$$btod_d2e                             0x100026fc   Section       62  btod.o(CL$$btod_d2e)
    CL$$btod_d2e_denorm_low                  0x1000273a   Section       70  btod.o(CL$$btod_d2e_denorm_low)
    CL$$btod_d2e_norm_op1                    0x10002780   Section       96  btod.o(CL$$btod_d2e_norm_op1)
    CL$$btod_div_common                      0x100027e0   Section      824  btod.o(CL$$btod_div_common)
    CL$$btod_e2e                             0x10002b18   Section      220  btod.o(CL$$btod_e2e)
    CL$$btod_ediv                            0x10002bf4   Section       42  btod.o(CL$$btod_ediv)
    CL$$btod_emul                            0x10002c1e   Section       42  btod.o(CL$$btod_emul)
    CL$$btod_mult_common                     0x10002c48   Section      580  btod.o(CL$$btod_mult_common)
    i.Free                                   0x10002e8c   Section        0  uart.o(i.Free)
    i.FreeRcv                                0x10002e94   Section        0  uart.o(i.FreeRcv)
    i.FreeSnd                                0x10002eb8   Section        0  uart.o(i.FreeSnd)
    i.SystemCoreClockUpdate                  0x10002edc   Section        0  system_lpc17xx.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x10003084   Section        0  system_lpc17xx.o(i.SystemInit)
    i.UART0_IRQHandler                       0x100031c4   Section        0  uart.o(i.UART0_IRQHandler)
    i.UART1_IRQHandler                       0x1000322c   Section        0  uart.o(i.UART1_IRQHandler)
    i.UARTInit                               0x1000329c   Section        0  uart.o(i.UARTInit)
    i.UARTSendChar                           0x10003358   Section        0  uart.o(i.UARTSendChar)
    i.__ARM_fpclassify                       0x1000337c   Section        0  fpclassify.o(i.__ARM_fpclassify)
    i.__NVIC_EnableIRQ                       0x100033a4   Section        0  uart.o(i.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x100033a5   Thumb Code    34  uart.o(i.__NVIC_EnableIRQ)
    i._is_digit                              0x100033c6   Section        0  __printf_wp.o(i._is_digit)
    i._mutex_acquire                         0x100033d4   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x100033d5   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x100033ea   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x100033eb   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x100033f6   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x100033f7   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x10003418   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x10003419   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x1000342a   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i._sys_exit                              0x10003432   Section        0  retarget.o(i._sys_exit)
    i.client                                 0x10003438   Section        0  main.o(i.client)
    i.ferror                                 0x1000352c   Section        0  retarget.o(i.ferror)
    i.fputc                                  0x10003534   Section        0  retarget.o(i.fputc)
    i.getFrequency                           0x10003544   Section        0  uart.o(i.getFrequency)
    i.lfsr113                                0x1000358c   Section        0  lfsr113.o(i.lfsr113)
    i.main                                   0x1000361c   Section        0  main.o(i.main)
    i.next_event                             0x10003694   Section        0  random.o(i.next_event)
    i.osRtxErrorNotify                       0x100036a8   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x100036c8   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.os_kernel_is_active                    0x100036cc   Section        0  rtx_lib.o(i.os_kernel_is_active)
    os_kernel_is_active                      0x100036cd   Thumb Code    28  rtx_lib.o(i.os_kernel_is_active)
    i.output                                 0x100036ec   Section        0  main.o(i.output)
    i.sendchar                               0x10003988   Section        0  retarget.o(i.sendchar)
    i.server                                 0x100039cc   Section        0  main.o(i.server)
    locale$$code                             0x10003a60   Section       44  lc_numeric_c.o(locale$$code)
    x$fpl$d2f                                0x10003a8c   Section       98  d2f.o(x$fpl$d2f)
    x$fpl$ddiv                               0x10003af0   Section      688  ddiv.o(x$fpl$ddiv)
    ddiv_entry                               0x10003af7   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    x$fpl$dfltu                              0x10003da0   Section       38  dflt_clz.o(x$fpl$dfltu)
    x$fpl$dnaninf                            0x10003dc6   Section      156  dnaninf.o(x$fpl$dnaninf)
    x$fpl$dretinf                            0x10003e62   Section       12  dretinf.o(x$fpl$dretinf)
    x$fpl$f2d                                0x10003e70   Section       86  f2d.o(x$fpl$f2d)
    x$fpl$fadd                               0x10003ec8   Section      196  faddsub_clz.o(x$fpl$fadd)
    _fadd1                                   0x10003ed7   Thumb Code     0  faddsub_clz.o(x$fpl$fadd)
    x$fpl$fdiv                               0x10003f8c   Section      388  fdiv.o(x$fpl$fdiv)
    _fdiv1                                   0x10003f8d   Thumb Code     0  fdiv.o(x$fpl$fdiv)
    x$fpl$fflt                               0x10004110   Section       48  fflt_clz.o(x$fpl$fflt)
    x$fpl$fmul                               0x10004140   Section      258  fmul.o(x$fpl$fmul)
    x$fpl$fnaninf                            0x10004242   Section      140  fnaninf.o(x$fpl$fnaninf)
    x$fpl$fretinf                            0x100042ce   Section       10  fretinf.o(x$fpl$fretinf)
    x$fpl$fsub                               0x100042d8   Section      234  faddsub_clz.o(x$fpl$fsub)
    _fsub1                                   0x100042e7   Thumb Code     0  faddsub_clz.o(x$fpl$fsub)
    x$fpl$printf1                            0x100043c2   Section        4  printf1.o(x$fpl$printf1)
    x$fpl$usenofp                            0x100043c6   Section        0  usenofp.o(x$fpl$usenofp)
    .constdata                               0x100043c8   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x100043c8   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x100043ec   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x10004410   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x1000442c   Section        1  irq_cm3.o(.constdata)
    .constdata                               0x10004430   Section      148  bigflt0.o(.constdata)
    tenpwrs_x                                0x10004430   Data          60  bigflt0.o(.constdata)
    tenpwrs_i                                0x1000446c   Data          64  bigflt0.o(.constdata)
    .conststring                             0x100044c4   Section       74  main.o(.conststring)
    .rodata                                  0x10004510   Section      160  rtx_lib.o(.rodata)
    __tagsym$$used                           0x10004510   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used                           0x10004578   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x100045b0   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x100045b0   Data          11  rtx_kernel.o(.rodata.str1.4)
    locale$$data                             0x100045dc   Section       28  lc_numeric_c.o(locale$$data)
    __lcnum_c_name                           0x100045e0   Data           2  lc_numeric_c.o(locale$$data)
    __lcnum_c_start                          0x100045e8   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_point                          0x100045f4   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_thousands                      0x100045f6   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_grouping                       0x100045f7   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_end                            0x100045f8   Data           0  lc_numeric_c.o(locale$$data)
    .bss.os                                  0x2007c000   Section     8256  rtx_lib.o(.bss.os)
    os_mem                                   0x2007c000   Data        8192  rtx_lib.o(.bss.os)
    os_isr_queue                             0x2007e000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x2007e040   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x2007e040   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x2007e074   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x2007e074   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x2007e0c4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x2007e0c4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x2007e108   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x2007e150   Section     1024  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x2007e150   Data         512  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x2007e350   Data         512  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x2007e550   Section       16  lfsr113.o(.data)
    z1                                       0x2007e550   Data           4  lfsr113.o(.data)
    z2                                       0x2007e554   Data           4  lfsr113.o(.data)
    z3                                       0x2007e558   Data           4  lfsr113.o(.data)
    z4                                       0x2007e55c   Data           4  lfsr113.o(.data)
    .data                                    0x2007e560   Section     1024  random.o(.data)
    ln_table                                 0x2007e560   Data        1024  random.o(.data)
    .data                                    0x2007e960   Section       12  retarget.o(.data)
    .data                                    0x2007e96c   Section       32  uart.o(.data)
    .data                                    0x2007e98c   Section       92  main.o(.data)
    .data                                    0x2007e9e8   Section        5  rtx_lib.o(.data)
    os_kernel_active                         0x2007e9ec   Data           1  rtx_lib.o(.data)
    .data                                    0x2007e9f0   Section        4  system_lpc17xx.o(.data)
    .bss                                     0x2007ea98   Section      128  uart.o(.bss)
    .bss                                     0x2007eb18   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x2007eb78   Section        0  os_systick.o(.bss.PendST)
    PendST                                   0x2007eb78   Data           1  os_systick.o(.bss.PendST)
    HEAP                                     0x2007eb80   Section     4096  startup_lpc17xx.o(HEAP)
    Heap_Mem                                 0x2007eb80   Data        4096  startup_lpc17xx.o(HEAP)
    STACK                                    0x2007fb80   Section     2048  startup_lpc17xx.o(STACK)
    Stack_Mem                                0x2007fb80   Data        2048  startup_lpc17xx.o(STACK)
    __initial_sp                             0x20080380   Data           0  startup_lpc17xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEJ$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _printf_mbtowc                            - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors                                0x10000000   Data           4  startup_lpc17xx.o(RESET)
    __main                                   0x100000cd   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x100000d5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x100000d5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x100000d5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x100000e3   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x10000109   Thumb Code    90  __dczerorl2.o(!!dczerorl2)
    __decompress1                            0x10000109   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    __scatterload_zeroinit                   0x10000165   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_f                                0x10000181   Thumb Code     0  _printf_f.o(.ARM.Collect$$_printf_percent$$00000003)
    _printf_percent                          0x10000181   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_d                                0x10000187   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_s                                0x1000018d   Thumb Code     0  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    _printf_percent_end                      0x10000193   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x10000197   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x10000199   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_1                     0x10000199   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_common                  0x10000199   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    __rt_lib_init_preinit_1                  0x10000199   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x10000199   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_user_alloc_1               0x10000199   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x1000019f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x1000019f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x1000019f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_2               0x1000019f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000016)
    __rt_lib_init_alloca_1                   0x100001a9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x100001a9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x100001a9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x100001a9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x100001a9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x100001a9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x100001a9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x100001a9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_lc_numeric_1               0x100001a9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x100001a9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_return                     0x100001a9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x100001a9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x100001a9   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_shutdown                        0x100001ab   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x100001ad   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x100001ad   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x100001ad   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x100001ad   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x100001ad   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x100001ad   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x100001ad   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x100001af   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x100001af   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x100001af   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x100001b5   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x100001bd   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x100001c1   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x100001c1   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x100001c9   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x100001cb   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x100001cb   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x100001cf   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x100001d5   Thumb Code     8  startup_lpc17xx.o(.text)
    NMI_Handler                              0x100001dd   Thumb Code     2  startup_lpc17xx.o(.text)
    HardFault_Handler                        0x100001df   Thumb Code     2  startup_lpc17xx.o(.text)
    MemManage_Handler                        0x100001e1   Thumb Code     2  startup_lpc17xx.o(.text)
    BusFault_Handler                         0x100001e3   Thumb Code     2  startup_lpc17xx.o(.text)
    UsageFault_Handler                       0x100001e5   Thumb Code     2  startup_lpc17xx.o(.text)
    DebugMon_Handler                         0x100001e9   Thumb Code     2  startup_lpc17xx.o(.text)
    ADC_IRQHandler                           0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    BOD_IRQHandler                           0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    CANActivity_IRQHandler                   0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    CAN_IRQHandler                           0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    DMA_IRQHandler                           0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT0_IRQHandler                         0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT1_IRQHandler                         0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT2_IRQHandler                         0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT3_IRQHandler                         0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    ENET_IRQHandler                          0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C0_IRQHandler                          0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C1_IRQHandler                          0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C2_IRQHandler                          0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    I2S_IRQHandler                           0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    MCPWM_IRQHandler                         0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    PLL0_IRQHandler                          0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    PLL1_IRQHandler                          0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    PWM1_IRQHandler                          0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    QEI_IRQHandler                           0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    RIT_IRQHandler                           0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    RTC_IRQHandler                           0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    SPI_IRQHandler                           0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    SSP0_IRQHandler                          0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    SSP1_IRQHandler                          0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER0_IRQHandler                        0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER1_IRQHandler                        0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER2_IRQHandler                        0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER3_IRQHandler                        0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    UART2_IRQHandler                         0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    UART3_IRQHandler                         0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    USBActivity_IRQHandler                   0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    USB_IRQHandler                           0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    WDT_IRQHandler                           0x100001ef   Thumb Code     0  startup_lpc17xx.o(.text)
    __user_initial_stackheap                 0x100001f1   Thumb Code     0  startup_lpc17xx.o(.text)
    SVC_Handler                              0x10000215   Thumb Code   108  irq_cm3.o(.text)
    PendSV_Handler                           0x10000281   Thumb Code    16  irq_cm3.o(.text)
    SysTick_Handler                          0x10000291   Thumb Code    16  irq_cm3.o(.text)
    __aeabi_uldivmod                         0x100002a9   Thumb Code     0  lludivv7m.o(.text)
    _ll_udiv                                 0x100002a9   Thumb Code   238  lludivv7m.o(.text)
    __2printf                                0x10000399   Thumb Code    20  noretval__2printf.o(.text)
    _printf_pre_padding                      0x100003b1   Thumb Code    44  _printf_pad.o(.text)
    _printf_post_padding                     0x100003dd   Thumb Code    34  _printf_pad.o(.text)
    _printf_str                              0x100003ff   Thumb Code    82  _printf_str.o(.text)
    _printf_int_dec                          0x10000451   Thumb Code   104  _printf_dec.o(.text)
    __printf                                 0x100004c9   Thumb Code   270  __printf_wp.o(.text)
    __aeabi_memcpy                           0x100005d7   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x100005d7   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x1000063d   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr                           0x10000661   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x10000661   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x10000665   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x100006a5   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x100006a5   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x100006a5   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x100006a9   Thumb Code     0  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x100006f3   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x100006f5   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x100006f7   Thumb Code     2  heapauxi.o(.text)
    _printf_int_common                       0x100006f9   Thumb Code   178  _printf_intcommon.o(.text)
    __lib_sel_fp_printf                      0x100007ab   Thumb Code     2  _printf_fp_dec.o(.text)
    _printf_fp_dec_real                      0x1000095d   Thumb Code   620  _printf_fp_dec.o(.text)
    _printf_cs_common                        0x10000bc9   Thumb Code    20  _printf_char.o(.text)
    _printf_char                             0x10000bdd   Thumb Code    16  _printf_char.o(.text)
    _printf_string                           0x10000bed   Thumb Code     8  _printf_char.o(.text)
    _printf_char_file                        0x10000bf5   Thumb Code    32  _printf_char_file.o(.text)
    __aeabi_memcpy4                          0x10000c19   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x10000c19   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x10000c19   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x10000c61   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_locale                              0x10000c7d   Thumb Code    10  rt_locale_twolibspace.o(.text)
    _ll_udiv10                               0x10000c87   Thumb Code   138  lludiv10.o(.text)
    _printf_char_common                      0x10000d1b   Thumb Code    32  _printf_char_common.o(.text)
    _printf_fp_infnan                        0x10000d41   Thumb Code   112  _printf_fp_infnan.o(.text)
    _btod_etento                             0x10000dc1   Thumb Code   224  bigflt0.o(.text)
    __user_libspace                          0x10000ea5   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x10000ea5   Thumb Code     0  libspace.o(.text)
    __user_setup_stackheap                   0x10000ead   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x10000ef7   Thumb Code    18  exit.o(.text)
    strcmp                                   0x10000f09   Thumb Code   128  strcmpv7m.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x1000103d   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x10001049   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetCount                         0x10001075   Thumb Code    16  os_systick.o(.text.OS_Tick_GetCount)
    OS_Tick_GetIRQn                          0x10001085   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_GetInterval                      0x1000108d   Thumb Code    12  os_systick.o(.text.OS_Tick_GetInterval)
    OS_Tick_GetOverflow                      0x10001099   Thumb Code    16  os_systick.o(.text.OS_Tick_GetOverflow)
    OS_Tick_Setup                            0x100010a9   Thumb Code    64  os_systick.o(.text.OS_Tick_Setup)
    osDelay                                  0x100011a1   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x100011c5   Thumb Code    48  rtx_kernel.o(.text.osKernelGetState)
    osKernelGetSysTimerCount                 0x100011f5   Thumb Code    36  rtx_kernel.o(.text.osKernelGetSysTimerCount)
    osKernelGetTickFreq                      0x10001219   Thumb Code    40  rtx_kernel.o(.text.osKernelGetTickFreq)
    osKernelInitialize                       0x10001241   Thumb Code    44  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x1000126d   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x10001291   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueGetCount                   0x100012fd   Thumb Code    48  rtx_msgqueue.o(.text.osMessageQueueGetCount)
    osMessageQueueNew                        0x1000132d   Thumb Code    36  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x10001351   Thumb Code   120  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x100013c9   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x100013ed   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x10001411   Thumb Code    36  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x10001435   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxKernelPreInit                       0x10001459   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x1000145b   Thumb Code   112  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x100014cb   Thumb Code    70  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x10001511   Thumb Code    60  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x1000154d   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x10001587   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x100015d1   Thumb Code    54  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x100016c1   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x10001709   Thumb Code    66  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x1000174d   Thumb Code   140  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x100017d9   Thumb Code   116  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x10001935   Thumb Code    76  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x10001981   Thumb Code    88  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x10001a31   Thumb Code    18  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x10001a43   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x10001a6f   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x10001a8f   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x10001add   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x10001af1   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x10001af9   Thumb Code    40  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x10001b21   Thumb Code    64  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x10001b61   Thumb Code    16  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x10001b71   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x10001ba9   Thumb Code    36  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x10001bcd   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x10001c3d   Thumb Code    60  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x10001ccd   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x10001cd9   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    osThreadYield                            0x10001cfd   Thumb Code    36  rtx_thread.o(.text.osThreadYield)
    _btod_d2e                                0x100026fd   Thumb Code    62  btod.o(CL$$btod_d2e)
    _d2e_denorm_low                          0x1000273b   Thumb Code    70  btod.o(CL$$btod_d2e_denorm_low)
    _d2e_norm_op1                            0x10002781   Thumb Code    96  btod.o(CL$$btod_d2e_norm_op1)
    __btod_div_common                        0x100027e1   Thumb Code   696  btod.o(CL$$btod_div_common)
    _e2e                                     0x10002b19   Thumb Code   220  btod.o(CL$$btod_e2e)
    _btod_ediv                               0x10002bf5   Thumb Code    42  btod.o(CL$$btod_ediv)
    _btod_emul                               0x10002c1f   Thumb Code    42  btod.o(CL$$btod_emul)
    __btod_mult_common                       0x10002c49   Thumb Code   580  btod.o(CL$$btod_mult_common)
    Free                                     0x10002e8d   Thumb Code     6  uart.o(i.Free)
    FreeRcv                                  0x10002e95   Thumb Code    28  uart.o(i.FreeRcv)
    FreeSnd                                  0x10002eb9   Thumb Code    28  uart.o(i.FreeSnd)
    SystemCoreClockUpdate                    0x10002edd   Thumb Code   408  system_lpc17xx.o(i.SystemCoreClockUpdate)
    SystemInit                               0x10003085   Thumb Code   302  system_lpc17xx.o(i.SystemInit)
    UART0_IRQHandler                         0x100031c5   Thumb Code    88  uart.o(i.UART0_IRQHandler)
    UART1_IRQHandler                         0x1000322d   Thumb Code    90  uart.o(i.UART1_IRQHandler)
    UARTInit                                 0x1000329d   Thumb Code   176  uart.o(i.UARTInit)
    UARTSendChar                             0x10003359   Thumb Code    26  uart.o(i.UARTSendChar)
    __ARM_fpclassify                         0x1000337d   Thumb Code    40  fpclassify.o(i.__ARM_fpclassify)
    _is_digit                                0x100033c7   Thumb Code    14  __printf_wp.o(i._is_digit)
    _mutex_acquire                           0x100033d5   Thumb Code    22  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x100033eb   Thumb Code    12  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x100033f7   Thumb Code    34  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x10003419   Thumb Code    18  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x1000342b   Thumb Code     8  rtx_lib.o(i._platform_post_stackheap_init)
    _sys_exit                                0x10003433   Thumb Code     4  retarget.o(i._sys_exit)
    client                                   0x10003439   Thumb Code   206  main.o(i.client)
    ferror                                   0x1000352d   Thumb Code     8  retarget.o(i.ferror)
    fputc                                    0x10003535   Thumb Code    14  retarget.o(i.fputc)
    getFrequency                             0x10003545   Thumb Code    62  uart.o(i.getFrequency)
    lfsr113                                  0x1000358d   Thumb Code   128  lfsr113.o(i.lfsr113)
    main                                     0x1000361d   Thumb Code    96  main.o(i.main)
    next_event                               0x10003695   Thumb Code    16  random.o(i.next_event)
    osRtxErrorNotify                         0x100036a9   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x100036c9   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    output                                   0x100036ed   Thumb Code   476  main.o(i.output)
    sendchar                                 0x10003989   Thumb Code    64  retarget.o(i.sendchar)
    server                                   0x100039cd   Thumb Code   124  main.o(i.server)
    _get_lc_numeric                          0x10003a61   Thumb Code    44  lc_numeric_c.o(locale$$code)
    __aeabi_d2f                              0x10003a8d   Thumb Code     0  d2f.o(x$fpl$d2f)
    _d2f                                     0x10003a8d   Thumb Code    98  d2f.o(x$fpl$d2f)
    __aeabi_ddiv                             0x10003af1   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    _ddiv                                    0x10003af1   Thumb Code   552  ddiv.o(x$fpl$ddiv)
    __aeabi_ui2d                             0x10003da1   Thumb Code     0  dflt_clz.o(x$fpl$dfltu)
    _dfltu                                   0x10003da1   Thumb Code    38  dflt_clz.o(x$fpl$dfltu)
    __fpl_dnaninf                            0x10003dc7   Thumb Code   156  dnaninf.o(x$fpl$dnaninf)
    __fpl_dretinf                            0x10003e63   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    __aeabi_f2d                              0x10003e71   Thumb Code     0  f2d.o(x$fpl$f2d)
    _f2d                                     0x10003e71   Thumb Code    86  f2d.o(x$fpl$f2d)
    __aeabi_fadd                             0x10003ec9   Thumb Code     0  faddsub_clz.o(x$fpl$fadd)
    _fadd                                    0x10003ec9   Thumb Code   196  faddsub_clz.o(x$fpl$fadd)
    __aeabi_fdiv                             0x10003f8d   Thumb Code     0  fdiv.o(x$fpl$fdiv)
    _fdiv                                    0x10003f8d   Thumb Code   384  fdiv.o(x$fpl$fdiv)
    __aeabi_i2f                              0x10004111   Thumb Code     0  fflt_clz.o(x$fpl$fflt)
    _fflt                                    0x10004111   Thumb Code    48  fflt_clz.o(x$fpl$fflt)
    __aeabi_fmul                             0x10004141   Thumb Code     0  fmul.o(x$fpl$fmul)
    _fmul                                    0x10004141   Thumb Code   258  fmul.o(x$fpl$fmul)
    __fpl_fnaninf                            0x10004243   Thumb Code   140  fnaninf.o(x$fpl$fnaninf)
    __fpl_fretinf                            0x100042cf   Thumb Code    10  fretinf.o(x$fpl$fretinf)
    __aeabi_fsub                             0x100042d9   Thumb Code     0  faddsub_clz.o(x$fpl$fsub)
    _fsub                                    0x100042d9   Thumb Code   234  faddsub_clz.o(x$fpl$fsub)
    _printf_fp_dec                           0x100043c3   Thumb Code     4  printf1.o(x$fpl$printf1)
    __I$use$fp                               0x100043c6   Number         0  usenofp.o(x$fpl$usenofp)
    osRtxUserSVC                             0x10004428   Data           4  rtx_lib.o(.constdata)
    irqRtxLib                                0x1000442c   Data           1  irq_cm3.o(.constdata)
    osRtxConfig                              0x10004510   Data         104  rtx_lib.o(.rodata)
    os_cb_sections                           0x10004578   Data          56  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x100045bc   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x100045dc   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x2007e040   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x2007e074   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x2007e0c4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x2007e14c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    uart_init_called                         0x2007e960   Data           1  retarget.o(.data)
    __stdout                                 0x2007e964   Data           4  retarget.o(.data)
    __stdin                                  0x2007e968   Data           4  retarget.o(.data)
    ITM_RxBuffer                             0x2007e96c   Data           4  uart.o(.data)
    UART0Status                              0x2007e970   Data           4  uart.o(.data)
    UART1Status                              0x2007e974   Data           4  uart.o(.data)
    UART0TxEmpty                             0x2007e978   Data           1  uart.o(.data)
    UART1TxEmpty                             0x2007e979   Data           1  uart.o(.data)
    UART0Count                               0x2007e97c   Data           4  uart.o(.data)
    UART1Count                               0x2007e980   Data           4  uart.o(.data)
    RcvLock0                                 0x2007e984   Data           1  uart.o(.data)
    SndLock0                                 0x2007e985   Data           1  uart.o(.data)
    RcvLock1                                 0x2007e986   Data           1  uart.o(.data)
    SndLock1                                 0x2007e987   Data           1  uart.o(.data)
    i                                        0x2007e988   Data           4  uart.o(.data)
    queueId                                  0x2007e98c   Data           8  main.o(.data)
    timeElapsed                              0x2007e994   Data           4  main.o(.data)
    msgIn                                    0x2007e998   Data           4  main.o(.data)
    msgOut                                   0x2007e99c   Data           4  main.o(.data)
    serverNum                                0x2007e9a0   Data           8  main.o(.data)
    clientNum                                0x2007e9a8   Data           8  main.o(.data)
    messageTot                               0x2007e9b0   Data           8  main.o(.data)
    sent                                     0x2007e9b8   Data           8  main.o(.data)
    failed                                   0x2007e9c0   Data           8  main.o(.data)
    received                                 0x2007e9c8   Data           8  main.o(.data)
    avgLossRatio                             0x2007e9d0   Data           8  main.o(.data)
    avgArrivalRate                           0x2007e9d8   Data           8  main.o(.data)
    avgServiceRate                           0x2007e9e0   Data           8  main.o(.data)
    irqRtxLibRef                             0x2007e9e8   Data           4  rtx_lib.o(.data)
    SystemCoreClock                          0x2007e9f0   Data           4  system_lpc17xx.o(.data)
    osRtxInfo                                0x2007e9f4   Data         164  rtx_kernel.o(.data.os)
    UART0Buffer                              0x2007ea98   Data          64  uart.o(.bss)
    UART1Buffer                              0x2007ead8   Data          64  uart.o(.bss)
    __libspace_start                         0x2007eb18   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x2007eb78   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x100000cd

  Load Region LR_IROM1 (Base: 0x10000000, Size: 0x00007090, Max: 0x00008000, ABSOLUTE, COMPRESSED[0x000049bc])

    Execution Region ER_IROM1 (Exec base: 0x10000000, Load base: 0x10000000, Size: 0x000045f8, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10000000   0x10000000   0x000000cc   Data   RO          434    RESET               startup_lpc17xx.o
    0x100000cc   0x100000cc   0x00000008   Code   RO          991  * !!!main             c_w.l(__main.o)
    0x100000d4   0x100000d4   0x00000034   Code   RO         1257    !!!scatter          c_w.l(__scatter.o)
    0x10000108   0x10000108   0x0000005a   Code   RO         1255    !!dczerorl2         c_w.l(__dczerorl2.o)
    0x10000162   0x10000162   0x00000002   PAD
    0x10000164   0x10000164   0x0000001c   Code   RO         1259    !!handler_zi        c_w.l(__scatter_zi.o)
    0x10000180   0x10000180   0x00000000   Code   RO          982    .ARM.Collect$$_printf_percent$$00000000  c_w.l(_printf_percent.o)
    0x10000180   0x10000180   0x00000006   Code   RO          981    .ARM.Collect$$_printf_percent$$00000003  c_w.l(_printf_f.o)
    0x10000186   0x10000186   0x00000006   Code   RO          980    .ARM.Collect$$_printf_percent$$00000009  c_w.l(_printf_d.o)
    0x1000018c   0x1000018c   0x00000006   Code   RO          979    .ARM.Collect$$_printf_percent$$00000014  c_w.l(_printf_s.o)
    0x10000192   0x10000192   0x00000004   Code   RO         1040    .ARM.Collect$$_printf_percent$$00000017  c_w.l(_printf_percent_end.o)
    0x10000196   0x10000196   0x00000002   Code   RO         1132    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x10000198   0x10000198   0x00000000   Code   RO         1134    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x10000198   0x10000198   0x00000000   Code   RO         1136    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x10000198   0x10000198   0x00000000   Code   RO         1139    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x10000198   0x10000198   0x00000000   Code   RO         1141    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x10000198   0x10000198   0x00000000   Code   RO         1143    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x10000198   0x10000198   0x00000006   Code   RO         1144    .ARM.Collect$$libinit$$0000000F  c_w.l(libinit2.o)
    0x1000019e   0x1000019e   0x00000000   Code   RO         1146    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x1000019e   0x1000019e   0x00000000   Code   RO         1148    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x1000019e   0x1000019e   0x00000000   Code   RO         1150    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x1000019e   0x1000019e   0x0000000a   Code   RO         1151    .ARM.Collect$$libinit$$00000016  c_w.l(libinit2.o)
    0x100001a8   0x100001a8   0x00000000   Code   RO         1152    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x100001a8   0x100001a8   0x00000000   Code   RO         1154    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x100001a8   0x100001a8   0x00000000   Code   RO         1156    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x100001a8   0x100001a8   0x00000000   Code   RO         1158    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x100001a8   0x100001a8   0x00000000   Code   RO         1160    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x100001a8   0x100001a8   0x00000000   Code   RO         1162    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x100001a8   0x100001a8   0x00000000   Code   RO         1164    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x100001a8   0x100001a8   0x00000000   Code   RO         1166    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x100001a8   0x100001a8   0x00000000   Code   RO         1170    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x100001a8   0x100001a8   0x00000000   Code   RO         1172    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x100001a8   0x100001a8   0x00000000   Code   RO         1174    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x100001a8   0x100001a8   0x00000000   Code   RO         1176    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x100001a8   0x100001a8   0x00000002   Code   RO         1177    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x100001aa   0x100001aa   0x00000002   Code   RO         1217    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x100001ac   0x100001ac   0x00000000   Code   RO         1238    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x100001ac   0x100001ac   0x00000000   Code   RO         1240    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x100001ac   0x100001ac   0x00000000   Code   RO         1243    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x100001ac   0x100001ac   0x00000000   Code   RO         1246    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x100001ac   0x100001ac   0x00000000   Code   RO         1248    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x100001ac   0x100001ac   0x00000000   Code   RO         1251    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x100001ac   0x100001ac   0x00000002   Code   RO         1252    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x100001ae   0x100001ae   0x00000000   Code   RO         1027    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x100001ae   0x100001ae   0x00000000   Code   RO         1053    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x100001ae   0x100001ae   0x00000006   Code   RO         1065    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x100001b4   0x100001b4   0x00000008   Code   RO         1054    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x100001bc   0x100001bc   0x00000004   Code   RO         1056    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x100001c0   0x100001c0   0x00000000   Code   RO         1058    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x100001c0   0x100001c0   0x00000008   Code   RO         1059    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x100001c8   0x100001c8   0x00000002   Code   RO         1178    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x100001ca   0x100001ca   0x00000000   Code   RO         1191    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x100001ca   0x100001ca   0x00000004   Code   RO         1192    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x100001ce   0x100001ce   0x00000006   Code   RO         1193    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x100001d4   0x100001d4   0x00000040   Code   RO          435    .text               startup_lpc17xx.o
    0x10000214   0x10000214   0x00000094   Code   RO          787    .text               RTX_CM3.lib(irq_cm3.o)
    0x100002a8   0x100002a8   0x000000ee   Code   RO          945    .text               c_w.l(lludivv7m.o)
    0x10000396   0x10000396   0x00000002   PAD
    0x10000398   0x10000398   0x00000018   Code   RO          949    .text               c_w.l(noretval__2printf.o)
    0x100003b0   0x100003b0   0x0000004e   Code   RO          953    .text               c_w.l(_printf_pad.o)
    0x100003fe   0x100003fe   0x00000052   Code   RO          955    .text               c_w.l(_printf_str.o)
    0x10000450   0x10000450   0x00000078   Code   RO          957    .text               c_w.l(_printf_dec.o)
    0x100004c8   0x100004c8   0x0000010e   Code   RO          967    .text               c_w.l(__printf_wp.o)
    0x100005d6   0x100005d6   0x0000008a   Code   RO          983    .text               c_w.l(rt_memcpy_v6.o)
    0x10000660   0x10000660   0x00000044   Code   RO          985    .text               c_w.l(rt_memclr.o)
    0x100006a4   0x100006a4   0x0000004e   Code   RO          987    .text               c_w.l(rt_memclr_w.o)
    0x100006f2   0x100006f2   0x00000006   Code   RO          989    .text               c_w.l(heapauxi.o)
    0x100006f8   0x100006f8   0x000000b2   Code   RO         1032    .text               c_w.l(_printf_intcommon.o)
    0x100007aa   0x100007aa   0x0000041e   Code   RO         1034    .text               c_w.l(_printf_fp_dec.o)
    0x10000bc8   0x10000bc8   0x0000002c   Code   RO         1036    .text               c_w.l(_printf_char.o)
    0x10000bf4   0x10000bf4   0x00000024   Code   RO         1038    .text               c_w.l(_printf_char_file.o)
    0x10000c18   0x10000c18   0x00000064   Code   RO         1041    .text               c_w.l(rt_memcpy_w.o)
    0x10000c7c   0x10000c7c   0x0000000a   Code   RO         1074    .text               c_w.l(rt_locale_twolibspace.o)
    0x10000c86   0x10000c86   0x0000008a   Code   RO         1076    .text               c_w.l(lludiv10.o)
    0x10000d10   0x10000d10   0x00000030   Code   RO         1078    .text               c_w.l(_printf_char_common.o)
    0x10000d40   0x10000d40   0x00000080   Code   RO         1080    .text               c_w.l(_printf_fp_infnan.o)
    0x10000dc0   0x10000dc0   0x000000e4   Code   RO         1082    .text               c_w.l(bigflt0.o)
    0x10000ea4   0x10000ea4   0x00000008   Code   RO         1114    .text               c_w.l(libspace.o)
    0x10000eac   0x10000eac   0x0000004a   Code   RO         1117    .text               c_w.l(sys_stackheap_outer.o)
    0x10000ef6   0x10000ef6   0x00000012   Code   RO         1121    .text               c_w.l(exit.o)
    0x10000f08   0x10000f08   0x00000080   Code   RO         1127    .text               c_w.l(strcmpv7m.o)
    0x10000f88   0x10000f88   0x00000040   Code   RO          770    .text.MessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x10000fc8   0x10000fc8   0x00000058   Code   RO          764    .text.MessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x10001020   0x10001020   0x0000001c   Code   RO          762    .text.MessageQueueRemove  RTX_CM3.lib(rtx_msgqueue.o)
    0x1000103c   0x1000103c   0x0000000c   Code   RO          922    .text.OS_Tick_AcknowledgeIRQ  RTX_CM3.lib(os_systick.o)
    0x10001048   0x10001048   0x0000002c   Code   RO          918    .text.OS_Tick_Enable  RTX_CM3.lib(os_systick.o)
    0x10001074   0x10001074   0x00000010   Code   RO          930    .text.OS_Tick_GetCount  RTX_CM3.lib(os_systick.o)
    0x10001084   0x10001084   0x00000006   Code   RO          924    .text.OS_Tick_GetIRQn  RTX_CM3.lib(os_systick.o)
    0x1000108a   0x1000108a   0x00000002   PAD
    0x1000108c   0x1000108c   0x0000000c   Code   RO          928    .text.OS_Tick_GetInterval  RTX_CM3.lib(os_systick.o)
    0x10001098   0x10001098   0x00000010   Code   RO          932    .text.OS_Tick_GetOverflow  RTX_CM3.lib(os_systick.o)
    0x100010a8   0x100010a8   0x00000040   Code   RO          916    .text.OS_Tick_Setup  RTX_CM3.lib(os_systick.o)
    0x100010e8   0x100010e8   0x0000006e   Code   RO          623    .text.ThreadFlagsCheck  RTX_CM3.lib(rtx_thread.o)
    0x10001156   0x10001156   0x00000002   PAD
    0x10001158   0x10001158   0x00000048   Code   RO          808    .text.TimerInsert   RTX_CM3.lib(rtx_timer.o)
    0x100011a0   0x100011a0   0x00000024   Code   RO          676    .text.osDelay       RTX_CM3.lib(rtx_delay.o)
    0x100011c4   0x100011c4   0x00000030   Code   RO          484    .text.osKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x100011f4   0x100011f4   0x00000024   Code   RO          508    .text.osKernelGetSysTimerCount  RTX_CM3.lib(rtx_kernel.o)
    0x10001218   0x10001218   0x00000028   Code   RO          504    .text.osKernelGetTickFreq  RTX_CM3.lib(rtx_kernel.o)
    0x10001240   0x10001240   0x0000002c   Code   RO          478    .text.osKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x1000126c   0x1000126c   0x00000024   Code   RO          488    .text.osKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x10001290   0x10001290   0x0000006c   Code   RO          736    .text.osMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x100012fc   0x100012fc   0x00000030   Code   RO          746    .text.osMessageQueueGetCount  RTX_CM3.lib(rtx_msgqueue.o)
    0x1000132c   0x1000132c   0x00000024   Code   RO          730    .text.osMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x10001350   0x10001350   0x00000078   Code   RO          734    .text.osMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x100013c8   0x100013c8   0x00000024   Code   RO          701    .text.osMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x100013ec   0x100013ec   0x00000024   Code   RO          707    .text.osMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x10001410   0x10001410   0x00000024   Code   RO          697    .text.osMutexNew    RTX_CM3.lib(rtx_mutex.o)
    0x10001434   0x10001434   0x00000024   Code   RO          703    .text.osMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x10001458   0x10001458   0x00000002   Code   RO          476    .text.osRtxKernelPreInit  RTX_CM3.lib(rtx_kernel.o)
    0x1000145a   0x1000145a   0x00000070   Code   RO          835    .text.osRtxMemoryAlloc  RTX_CM3.lib(rtx_memory.o)
    0x100014ca   0x100014ca   0x00000046   Code   RO          837    .text.osRtxMemoryFree  RTX_CM3.lib(rtx_memory.o)
    0x10001510   0x10001510   0x0000003c   Code   RO          833    .text.osRtxMemoryInit  RTX_CM3.lib(rtx_memory.o)
    0x1000154c   0x1000154c   0x0000003a   Code   RO          850    .text.osRtxMemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x10001586   0x10001586   0x0000004a   Code   RO          852    .text.osRtxMemoryPoolFree  RTX_CM3.lib(rtx_mempool.o)
    0x100015d0   0x100015d0   0x00000036   Code   RO          848    .text.osRtxMemoryPoolInit  RTX_CM3.lib(rtx_mempool.o)
    0x10001606   0x10001606   0x000000ba   Code   RO          760    .text.osRtxMessageQueuePostProcess  RTX_CM3.lib(rtx_msgqueue.o)
    0x100016c0   0x100016c0   0x00000048   Code   RO          693    .text.osRtxMutexOwnerRelease  RTX_CM3.lib(rtx_mutex.o)
    0x10001708   0x10001708   0x00000042   Code   RO          695    .text.osRtxMutexOwnerRestore  RTX_CM3.lib(rtx_mutex.o)
    0x1000174a   0x1000174a   0x00000002   PAD
    0x1000174c   0x1000174c   0x0000008c   Code   RO          903    .text.osRtxPendSV_Handler  RTX_CM3.lib(rtx_system.o)
    0x100017d8   0x100017d8   0x00000074   Code   RO          905    .text.osRtxPostProcess  RTX_CM3.lib(rtx_system.o)
    0x1000184c   0x1000184c   0x00000038   Code   RO          563    .text.osRtxThreadBlock  RTX_CM3.lib(rtx_thread.o)
    0x10001884   0x10001884   0x00000074   Code   RO          571    .text.osRtxThreadDelayInsert  RTX_CM3.lib(rtx_thread.o)
    0x100018f8   0x100018f8   0x0000003c   Code   RO          567    .text.osRtxThreadDelayRemove  RTX_CM3.lib(rtx_thread.o)
    0x10001934   0x10001934   0x0000004c   Code   RO          551    .text.osRtxThreadDelayTick  RTX_CM3.lib(rtx_thread.o)
    0x10001980   0x10001980   0x00000058   Code   RO          561    .text.osRtxThreadDispatch  RTX_CM3.lib(rtx_thread.o)
    0x100019d8   0x100019d8   0x00000058   Code   RO          647    .text.osRtxThreadFree  RTX_CM3.lib(rtx_thread.o)
    0x10001a30   0x10001a30   0x00000012   Code   RO          543    .text.osRtxThreadListGet  RTX_CM3.lib(rtx_thread.o)
    0x10001a42   0x10001a42   0x0000002c   Code   RO          541    .text.osRtxThreadListPut  RTX_CM3.lib(rtx_thread.o)
    0x10001a6e   0x10001a6e   0x00000014   Code   RO          547    .text.osRtxThreadListRemove  RTX_CM3.lib(rtx_thread.o)
    0x10001a82   0x10001a82   0x0000000c   Code   RO          553    .text.osRtxThreadListRoot  RTX_CM3.lib(rtx_thread.o)
    0x10001a8e   0x10001a8e   0x00000026   Code   RO          545    .text.osRtxThreadListSort  RTX_CM3.lib(rtx_thread.o)
    0x10001ab4   0x10001ab4   0x00000028   Code   RO          621    .text.osRtxThreadPostProcess  RTX_CM3.lib(rtx_thread.o)
    0x10001adc   0x10001adc   0x00000014   Code   RO          549    .text.osRtxThreadReadyPut  RTX_CM3.lib(rtx_thread.o)
    0x10001af0   0x10001af0   0x00000006   Code   RO          555    .text.osRtxThreadRegPtr  RTX_CM3.lib(rtx_thread.o)
    0x10001af6   0x10001af6   0x00000002   PAD
    0x10001af8   0x10001af8   0x00000028   Code   RO          559    .text.osRtxThreadStackCheck  RTX_CM3.lib(rtx_thread.o)
    0x10001b20   0x10001b20   0x00000040   Code   RO          573    .text.osRtxThreadStartup  RTX_CM3.lib(rtx_thread.o)
    0x10001b60   0x10001b60   0x00000010   Code   RO          557    .text.osRtxThreadSwitch  RTX_CM3.lib(rtx_thread.o)
    0x10001b70   0x10001b70   0x00000038   Code   RO          569    .text.osRtxThreadWaitEnter  RTX_CM3.lib(rtx_thread.o)
    0x10001ba8   0x10001ba8   0x00000024   Code   RO          565    .text.osRtxThreadWaitExit  RTX_CM3.lib(rtx_thread.o)
    0x10001bcc   0x10001bcc   0x00000070   Code   RO          901    .text.osRtxTick_Handler  RTX_CM3.lib(rtx_system.o)
    0x10001c3c   0x10001c3c   0x0000003c   Code   RO          792    .text.osRtxTimerThread  RTX_CM3.lib(rtx_timer.o)
    0x10001c78   0x10001c78   0x00000054   Code   RO          794    .text.osRtxTimerTick  RTX_CM3.lib(rtx_timer.o)
    0x10001ccc   0x10001ccc   0x0000000c   Code   RO          605    .text.osThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x10001cd8   0x10001cd8   0x00000024   Code   RO          577    .text.osThreadNew   RTX_CM3.lib(rtx_thread.o)
    0x10001cfc   0x10001cfc   0x00000024   Code   RO          595    .text.osThreadYield  RTX_CM3.lib(rtx_thread.o)
    0x10001d20   0x10001d20   0x00000014   Code   RO          680    .text.svcRtxDelay   RTX_CM3.lib(rtx_delay.o)
    0x10001d34   0x10001d34   0x0000000c   Code   RO          486    .text.svcRtxKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x10001d40   0x10001d40   0x00000028   Code   RO          510    .text.svcRtxKernelGetSysTimerCount  RTX_CM3.lib(rtx_kernel.o)
    0x10001d68   0x10001d68   0x0000000c   Code   RO          506    .text.svcRtxKernelGetTickFreq  RTX_CM3.lib(rtx_kernel.o)
    0x10001d74   0x10001d74   0x00000150   Code   RO          516    .text.svcRtxKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x10001ec4   0x10001ec4   0x00000088   Code   RO          518    .text.svcRtxKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x10001f4c   0x10001f4c   0x000000e0   Code   RO          772    .text.svcRtxMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x1000202c   0x1000202c   0x00000010   Code   RO          748    .text.svcRtxMessageQueueGetCount  RTX_CM3.lib(rtx_msgqueue.o)
    0x1000203c   0x1000203c   0x00000130   Code   RO          758    .text.svcRtxMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x1000216c   0x1000216c   0x000000c0   Code   RO          768    .text.svcRtxMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x1000222c   0x1000222c   0x00000094   Code   RO          713    .text.svcRtxMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x100022c0   0x100022c0   0x000000b0   Code   RO          719    .text.svcRtxMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x10002370   0x10002370   0x00000068   Code   RO          709    .text.svcRtxMutexNew  RTX_CM3.lib(rtx_mutex.o)
    0x100023d8   0x100023d8   0x000000b4   Code   RO          715    .text.svcRtxMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x1000248c   0x1000248c   0x00000068   Code   RO          651    .text.svcRtxThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x100024f4   0x100024f4   0x000001d0   Code   RO          575    .text.svcRtxThreadNew  RTX_CM3.lib(rtx_thread.o)
    0x100026c4   0x100026c4   0x00000038   Code   RO          637    .text.svcRtxThreadYield  RTX_CM3.lib(rtx_thread.o)
    0x100026fc   0x100026fc   0x0000003e   Code   RO         1085    CL$$btod_d2e        c_w.l(btod.o)
    0x1000273a   0x1000273a   0x00000046   Code   RO         1087    CL$$btod_d2e_denorm_low  c_w.l(btod.o)
    0x10002780   0x10002780   0x00000060   Code   RO         1086    CL$$btod_d2e_norm_op1  c_w.l(btod.o)
    0x100027e0   0x100027e0   0x00000338   Code   RO         1095    CL$$btod_div_common  c_w.l(btod.o)
    0x10002b18   0x10002b18   0x000000dc   Code   RO         1092    CL$$btod_e2e        c_w.l(btod.o)
    0x10002bf4   0x10002bf4   0x0000002a   Code   RO         1089    CL$$btod_ediv       c_w.l(btod.o)
    0x10002c1e   0x10002c1e   0x0000002a   Code   RO         1088    CL$$btod_emul       c_w.l(btod.o)
    0x10002c48   0x10002c48   0x00000244   Code   RO         1094    CL$$btod_mult_common  c_w.l(btod.o)
    0x10002e8c   0x10002e8c   0x00000006   Code   RO          107    i.Free              uart.o
    0x10002e92   0x10002e92   0x00000002   PAD
    0x10002e94   0x10002e94   0x00000024   Code   RO          108    i.FreeRcv           uart.o
    0x10002eb8   0x10002eb8   0x00000024   Code   RO          109    i.FreeSnd           uart.o
    0x10002edc   0x10002edc   0x000001a8   Code   RO          442    i.SystemCoreClockUpdate  system_lpc17xx.o
    0x10003084   0x10003084   0x00000140   Code   RO          443    i.SystemInit        system_lpc17xx.o
    0x100031c4   0x100031c4   0x00000068   Code   RO          113    i.UART0_IRQHandler  uart.o
    0x1000322c   0x1000322c   0x00000070   Code   RO          114    i.UART1_IRQHandler  uart.o
    0x1000329c   0x1000329c   0x000000bc   Code   RO          115    i.UARTInit          uart.o
    0x10003358   0x10003358   0x00000024   Code   RO          119    i.UARTSendChar      uart.o
    0x1000337c   0x1000337c   0x00000028   Code   RO         1112    i.__ARM_fpclassify  m_ws.l(fpclassify.o)
    0x100033a4   0x100033a4   0x00000022   Code   RO          120    i.__NVIC_EnableIRQ  uart.o
    0x100033c6   0x100033c6   0x0000000e   Code   RO          969    i._is_digit         c_w.l(__printf_wp.o)
    0x100033d4   0x100033d4   0x00000016   Code   RO          315    i._mutex_acquire    rtx_lib.o
    0x100033ea   0x100033ea   0x0000000c   Code   RO          316    i._mutex_free       rtx_lib.o
    0x100033f6   0x100033f6   0x00000022   Code   RO          317    i._mutex_initialize  rtx_lib.o
    0x10003418   0x10003418   0x00000012   Code   RO          318    i._mutex_release    rtx_lib.o
    0x1000342a   0x1000342a   0x00000008   Code   RO          319    i._platform_post_stackheap_init  rtx_lib.o
    0x10003432   0x10003432   0x00000004   Code   RO           40    i._sys_exit         retarget.o
    0x10003436   0x10003436   0x00000002   PAD
    0x10003438   0x10003438   0x000000f4   Code   RO          241    i.client            main.o
    0x1000352c   0x1000352c   0x00000008   Code   RO           42    i.ferror            retarget.o
    0x10003534   0x10003534   0x0000000e   Code   RO           44    i.fputc             retarget.o
    0x10003542   0x10003542   0x00000002   PAD
    0x10003544   0x10003544   0x00000048   Code   RO          121    i.getFrequency      uart.o
    0x1000358c   0x1000358c   0x00000090   Code   RO            1    i.lfsr113           lfsr113.o
    0x1000361c   0x1000361c   0x00000078   Code   RO          242    i.main              main.o
    0x10003694   0x10003694   0x00000014   Code   RO           23    i.next_event        random.o
    0x100036a8   0x100036a8   0x00000020   Code   RO          401    i.osRtxErrorNotify  rtx_config.o
    0x100036c8   0x100036c8   0x00000004   Code   RO          402    i.osRtxIdleThread   rtx_config.o
    0x100036cc   0x100036cc   0x00000020   Code   RO          320    i.os_kernel_is_active  rtx_lib.o
    0x100036ec   0x100036ec   0x0000029c   Code   RO          243    i.output            main.o
    0x10003988   0x10003988   0x00000044   Code   RO           46    i.sendchar          retarget.o
    0x100039cc   0x100039cc   0x00000094   Code   RO          244    i.server            main.o
    0x10003a60   0x10003a60   0x0000002c   Code   RO         1108    locale$$code        c_w.l(lc_numeric_c.o)
    0x10003a8c   0x10003a8c   0x00000062   Code   RO          993    x$fpl$d2f           fz_ws.l(d2f.o)
    0x10003aee   0x10003aee   0x00000002   PAD
    0x10003af0   0x10003af0   0x000002b0   Code   RO          996    x$fpl$ddiv          fz_ws.l(ddiv.o)
    0x10003da0   0x10003da0   0x00000026   Code   RO          999    x$fpl$dfltu         fz_ws.l(dflt_clz.o)
    0x10003dc6   0x10003dc6   0x0000009c   Code   RO         1043    x$fpl$dnaninf       fz_ws.l(dnaninf.o)
    0x10003e62   0x10003e62   0x0000000c   Code   RO         1045    x$fpl$dretinf       fz_ws.l(dretinf.o)
    0x10003e6e   0x10003e6e   0x00000002   PAD
    0x10003e70   0x10003e70   0x00000056   Code   RO         1005    x$fpl$f2d           fz_ws.l(f2d.o)
    0x10003ec6   0x10003ec6   0x00000002   PAD
    0x10003ec8   0x10003ec8   0x000000c4   Code   RO         1007    x$fpl$fadd          fz_ws.l(faddsub_clz.o)
    0x10003f8c   0x10003f8c   0x00000184   Code   RO         1014    x$fpl$fdiv          fz_ws.l(fdiv.o)
    0x10004110   0x10004110   0x00000030   Code   RO         1018    x$fpl$fflt          fz_ws.l(fflt_clz.o)
    0x10004140   0x10004140   0x00000102   Code   RO         1023    x$fpl$fmul          fz_ws.l(fmul.o)
    0x10004242   0x10004242   0x0000008c   Code   RO         1047    x$fpl$fnaninf       fz_ws.l(fnaninf.o)
    0x100042ce   0x100042ce   0x0000000a   Code   RO         1049    x$fpl$fretinf       fz_ws.l(fretinf.o)
    0x100042d8   0x100042d8   0x000000ea   Code   RO         1009    x$fpl$fsub          fz_ws.l(faddsub_clz.o)
    0x100043c2   0x100043c2   0x00000004   Code   RO         1025    x$fpl$printf1       fz_ws.l(printf1.o)
    0x100043c6   0x100043c6   0x00000000   Code   RO         1051    x$fpl$usenofp       fz_ws.l(usenofp.o)
    0x100043c6   0x100043c6   0x00000002   PAD
    0x100043c8   0x100043c8   0x00000064   Data   RO          327    .constdata          rtx_lib.o
    0x1000442c   0x1000442c   0x00000001   Data   RO          786    .constdata          RTX_CM3.lib(irq_cm3.o)
    0x1000442d   0x1000442d   0x00000003   PAD
    0x10004430   0x10004430   0x00000094   Data   RO         1083    .constdata          c_w.l(bigflt0.o)
    0x100044c4   0x100044c4   0x0000004a   Data   RO          246    .conststring        main.o
    0x1000450e   0x1000450e   0x00000002   PAD
    0x10004510   0x10004510   0x000000a0   Data   RO          329    .rodata             rtx_lib.o
    0x100045b0   0x100045b0   0x0000000b   Data   RO          530    .rodata.str1.4      RTX_CM3.lib(rtx_kernel.o)
    0x100045bb   0x100045bb   0x00000001   PAD
    0x100045bc   0x100045bc   0x00000020   Data   RO         1253    Region$$Table       anon$$obj.o
    0x100045dc   0x100045dc   0x0000001c   Data   RO         1107    locale$$data        c_w.l(lc_numeric_c.o)


    Execution Region RW_IRAM2 (Exec base: 0x2007c000, Load base: 0x100045f8, Size: 0x00004380, Max: 0x00008000, ABSOLUTE, COMPRESSED[0x000003c4])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2007c000   COMPRESSED   0x00002040   Data   RW          321    .bss.os             rtx_lib.o
    0x2007e040   COMPRESSED   0x00000034   Data   RW          323    .bss.os.msgqueue.cb  rtx_lib.o
    0x2007e074   COMPRESSED   0x00000050   Data   RW          324    .bss.os.msgqueue.mem  rtx_lib.o
    0x2007e0c4   COMPRESSED   0x00000088   Data   RW          325    .bss.os.thread.cb   rtx_lib.o
    0x2007e14c   COMPRESSED   0x00000004   PAD
    0x2007e150   COMPRESSED   0x00000400   Data   RW          326    .bss.os.thread.stack  rtx_lib.o
    0x2007e550   COMPRESSED   0x00000010   Data   RW            2    .data               lfsr113.o
    0x2007e560   COMPRESSED   0x00000400   Data   RW           24    .data               random.o
    0x2007e960   COMPRESSED   0x0000000c   Data   RW           47    .data               retarget.o
    0x2007e96c   COMPRESSED   0x00000020   Data   RW          123    .data               uart.o
    0x2007e98c   COMPRESSED   0x0000005c   Data   RW          247    .data               main.o
    0x2007e9e8   COMPRESSED   0x00000005   Data   RW          328    .data               rtx_lib.o
    0x2007e9ed   COMPRESSED   0x00000003   PAD
    0x2007e9f0   COMPRESSED   0x00000004   Data   RW          444    .data               system_lpc17xx.o
    0x2007e9f4   COMPRESSED   0x000000a4   Data   RW          531    .data.os            RTX_CM3.lib(rtx_kernel.o)
    0x2007ea98        -       0x00000080   Zero   RW          122    .bss                uart.o
    0x2007eb18        -       0x00000060   Zero   RW         1115    .bss                c_w.l(libspace.o)
    0x2007eb78        -       0x00000001   Zero   RW          934    .bss.PendST         RTX_CM3.lib(os_systick.o)
    0x2007eb79   COMPRESSED   0x00000007   PAD
    0x2007eb80        -       0x00001000   Zero   RW          433    HEAP                startup_lpc17xx.o
    0x2007fb80        -       0x00000800   Zero   RW          432    STACK               startup_lpc17xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       144         16          0         16          0       5210   lfsr113.o
      1180        278         74         92          0       7364   main.o
        20          4          0       1024          0        921   random.o
        94          4          0         12          0       3879   retarget.o
        36          6          0          0          0       1013   rtx_config.o
       126          4        260       9553          0      16302   rtx_lib.o
        64         26        204          0       6144        820   startup_lpc17xx.o
       744         34          0          4          0       1447   system_lpc17xx.o
       624         86          0         32        128      23039   uart.o

    ----------------------------------------------------------------------
      3038        458        572      10740       6272      59995   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         6          0          2          7          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       148         10          1          0          0        488   irq_cm3.o
       170         44          0          0          1       3105   os_systick.o
        56          4          0          0          0       2854   rtx_delay.o
       742         68         11        164          0      17231   rtx_kernel.o
       242          0          0          0          0       2478   rtx_memory.o
       186          0          0          0          0      16576   rtx_mempool.o
      1414         32          0          0          0      18694   rtx_msgqueue.o
       890         32          0          0          0      10004   rtx_mutex.o
       368         26          0          0          0       5437   rtx_system.o
      1712        100          0          0          0      32739   rtx_thread.o
       216         20          0          0          0      10445   rtx_timer.o
        90          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
       284          0          0          0          0        156   __printf_wp.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        44          0          0          0          0        108   _printf_char.o
        48          6          0          0          0         96   _printf_char_common.o
        36          4          0          0          0         80   _printf_char_file.o
         6          0          0          0          0          0   _printf_d.o
       120         16          0          0          0         92   _printf_dec.o
         6          0          0          0          0          0   _printf_f.o
      1054          0          0          0          0        216   _printf_fp_dec.o
       128         16          0          0          0         84   _printf_fp_infnan.o
       178          0          0          0          0         88   _printf_intcommon.o
        78          0          0          0          0        108   _printf_pad.o
         0          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
         6          0          0          0          0          0   _printf_s.o
        82          0          0          0          0         80   _printf_str.o
       228          4        148          0          0         96   bigflt0.o
      1936        128          0          0          0        672   btod.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
        44         10         28          0          0         76   lc_numeric_c.o
         2          0          0          0          0          0   libinit.o
        18          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       138          0          0          0          0         80   lludiv10.o
       238          0          0          0          0        100   lludivv7m.o
        24          4          0          0          0         84   noretval__2printf.o
        10          0          0          0          0         76   rt_locale_twolibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       128          0          0          0          0         68   strcmpv7m.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        98          4          0          0          0         92   d2f.o
       688        140          0          0          0        208   ddiv.o
        38          0          0          0          0         68   dflt_clz.o
       156          4          0          0          0         92   dnaninf.o
        12          0          0          0          0         68   dretinf.o
        86          4          0          0          0         84   f2d.o
       430          8          0          0          0        168   faddsub_clz.o
       388         76          0          0          0         96   fdiv.o
        48          0          0          0          0         68   fflt_clz.o
       258          4          0          0          0         84   fmul.o
       140          4          0          0          0         84   fnaninf.o
        10          0          0          0          0         68   fretinf.o
         4          0          0          0          0         68   printf1.o
         0          0          0          0          0          0   usenofp.o
        40          0          0          0          0         68   fpclassify.o

    ----------------------------------------------------------------------
     14110        780        192        164        104     124471   Library Totals
        20          0          4          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      6144        336         12        164          1     120051   RTX_CM3.lib
      5550        200        176          0         96       3104   c_w.l
      2356        244          0          0          0       1248   fz_ws.l
        40          0          0          0          0         68   m_ws.l

    ----------------------------------------------------------------------
     14110        780        192        164        104     124471   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     17148       1238        764      10904       6376     180522   Grand Totals
     17148       1238        764        964       6376     180522   ELF Image Totals (compressed)
     17148       1238        764        964          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                17912 (  17.49kB)
    Total RW  Size (RW Data + ZI Data)             17280 (  16.88kB)
    Total ROM Size (Code + RO Data + RW Data)      18876 (  18.43kB)

==============================================================================

